Violation ID: aria-allowed-role
Description: Ensures role attribute has an appropriate value for the element
Help: ARIA role must be appropriate for the element
Help URL: https://dequeuniversity.com/rules/axe/3.1/aria-allowed-role?application=axeAPI
Why it matters: Intended accessible technology behavior by a developer is not enabled when an assigned WAI-ARIA role value is invalid for the parent element. When screen readers and other assistive technologies do not know the role of each element on the web page, they are not able to interact with it intelligently, nor are they able to communicate the role to the user. When the value for a role is invalid, there is no way to communicate the element's features, properties, and methods to assistive technologies. For example, applying role="table" to a <ul> effectively hijacks the default semantics associated with the <ul> element in a way that screenreaders do not expect resulting in unexpected behavior.
Impact: minor
Tags: cat.aria, best-practice
---
Violation ID: color-contrast
Description: Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds
Help: Elements must have sufficient color contrast
Help URL: https://dequeuniversity.com/rules/axe/3.1/color-contrast?application=axeAPI
Why it matters: Some people with low vision experience low contrast, meaning that there aren't very many bright or dark areas. Everything tends to appear about the same brightness, which makes it hard to distinguish outlines, borders, edges, and details. Text that is too close in luminance (brightness) to the background can be hard to read. There are nearly three times more individuals with low vision than those with total blindness. One in twelve people cannot see the average full spectrum of colors - about 8% of men and 0.4% of women in the US. A person with low vision or color blindness is unable to distinguish text against a background without sufficient contrast. Color transparency and opacity is taken into account in the background. Color transparency and opacity in the foreground is more difficult to detect and account for due to: 1:1 colors in foreground and background. CSS background gradients. Background colors in CSS pseudo-elements. Background colors created with CSS borders. Overlap by another element in the foreground - this sometimes comes up with tricky positioning. Elements moved outside the viewport via CSS.
Impact: serious
Tags: cat.color, wcag2aa, wcag143
---
Violation ID: image-alt
Description: Ensures <img> elements have alternate text or a role of none or presentation
Help: Images must have alternate text
Help URL: https://dequeuniversity.com/rules/axe/3.1/image-alt?application=axeAPI
Why it matters: Screen readers have no way of translating an image into words that gets read to the user, even if the image only consists of text. As a result, it's necessary for images to have short, descriptive alt text so screen reader users clearly understand the image's contents and purpose. If you can't see, all types of visual information, such as images, are completely useless unless a digital text alternative is provided so that screen readers can convert that text into either sound or braille. The same is true in varying degrees for people with low vision or color-blindness. When you do not provide an acceptable alternative that works for their available sensory modalities, such as making an image accessible by providing a digital text description, screen readers cannot convert it into speech or braille to make it available by sound or touch.
Impact: critical
Tags: cat.text-alternatives, wcag2a, wcag111, section508, section508.22.a
---
Violation ID: image-redundant-alt
Description: Ensure button and link text is not repeated as image alternative
Help: Text of buttons and links should not be repeated in the image alternative
Help URL: https://dequeuniversity.com/rules/axe/3.1/image-redundant-alt?application=axeAPI
Why it matters: It is unnecessary and potentially confusing to have alternative text for a link or image to be repeated in text adjacent to the link or image since it would be read twice by a screen reader. Since image buttons use alt attributes for labels, the labels must not duplicate the text next to the button. Duplicated alternative text for an image or link in the text adjacent to that image or link results in screen readers announcing the text to the user twice.
Impact: minor
Tags: cat.text-alternatives, best-practice
---
Violation ID: label-title-only
Description: Ensures that every form element is not solely labeled using the title or aria-describedby attributes
Help: Form elements should have a visible label
Help URL: https://dequeuniversity.com/rules/axe/3.1/label-title-only?application=axeAPI
Why it matters: The title and aria-describedby attributes are used to provide additional information such as a hint. Hints are exposed to accessibility APIs differently than labels and as such, this can cause problems with assistive technologies. When form inputs such as text entry fields, radio buttons, check boxes, and select menus contain no labels other than title and aria-describedby attribute values, screen readers interpret the content as advisory information only. Labels created by the title and aria-describedby values are not sufficient to create a true label that can be determined programmatically from the code to convey the purpose of the input form element.
Impact: serious
Tags: cat.forms, best-practice
---
Violation ID: landmark-no-duplicate-contentinfo
Description: Ensures the page has at most one contentinfo landmark
Help: Page must not have more than one contentinfo landmark
Help URL: https://dequeuniversity.com/rules/axe/3.1/landmark-no-duplicate-contentinfo?application=axeAPI
Why it matters: One of the main purposes of landmarks is to allow blind users to quickly find and navigate to the appropriate landmark, so you should keep the total number of landmarks relatively low. If you don't, screen reader users will have to sort through too much extra information to find what they're looking for. Despite all of the talk about using correct semantic structure for accessibility, HTML has historically lacked some key semantic markers, such as the ability to designate sections of the page as the header, navigation, main content, and footer. With HTML5, these designations are possible, using the new elements header, nav, main, and footer. Similar functionality is available using the ARIA (Accessible Rich Internet Application) attributes role="banner", role="navigation", role="main" and role="contentinfo". JAWS, NVDA, and VoiceOver support the ability to navigate to sections of a web page using ARIA landmarks. Landmarks provide a more elegant solution to the problem of providing a way for users to skip to the main content of the web page. There is no visible alteration to the web design, making it unobtrusive and invisible. Of course, the fact that this technique is invisible is fine for blind screen reader users, but not so fine for sighted keyboard users or screen enlarger users with low vision. In this sense, HTML 5 regions and ARIA landmarks cannot yet replace the old-fashioned "skip navigation" links. Browsers still do not have a built-in way to notify users that HTML 5 regions or ARIA landmarks are present. Screen reader users are the only ones who can take advantage of them. There is a Firefox ARIA landmark extension available, which adds the ability to navigate by landmarks in Firefox, but this is not a native feature of the browser.
Impact: moderate
Tags: cat.semantics, best-practice
---
Violation ID: landmark-one-main
Description: Ensures the page has only one main landmark and each iframe in the page has at most one main landmark
Help: Page must have one main landmark
Help URL: https://dequeuniversity.com/rules/axe/3.1/landmark-one-main?application=axeAPI
Why it matters: Navigating a web page is far simpler for screen reader users if all of the content splits between one or more high-level sections. Content outside of these sections is difficult to find, and its purpose may be unclear. HTML has historically lacked some key semantic markers, such as the ability to designate sections of the page as the header, navigation, main content, and footer. Using both HTML5 elements and ARIA landmarks in the same element is considered a best practice, but the future will favor HTML regions as browser support increases.
Impact: moderate
Tags: cat.semantics, best-practice
---
Violation ID: link-name
Description: Ensures links have discernible text
Help: Links must have discernible text
Help URL: https://dequeuniversity.com/rules/axe/3.1/link-name?application=axeAPI
Why it matters: Inaccessible link elements pose barriers to accessibility, as they are a fundamental component of a website. Users who rely exclusively on a keyboard (and no mouse) to navigate a webpage can only click on links that can receive programmatic focus. A link that cannot receive programmatic focus is inaccessible to these users. Like sighted users, screen reader users need to know where a link is pointing. Inner link text provides this information, though it won't get used if a screen reader can't access it. Keyboard users, including visually impaired screen reader users or people who cannot use a mouse, can activate only the links and form elements that can receive programmatic focus. Any events activated exclusively by other types of focus, for example onmouseover events that depend on the mouse hover focus, are inaccessible to keyboard users. Only links and form elements receive keyboard focus by default. Modify elements that are not links or form components to receive focus by adding tabindex="0".
Impact: serious
Tags: cat.name-role-value, wcag2a, wcag412, wcag244, section508, section508.22.a
---
Violation ID: meta-viewport
Description: Ensures <meta name="viewport"> does not disable text scaling and zooming
Help: Zooming and scaling must not be disabled
Help URL: https://dequeuniversity.com/rules/axe/3.1/meta-viewport?application=axeAPI
Why it matters: The user-scalable="no" parameter inside the content attribute of <meta name="viewport"> element disables zooming on a page. The maximum-scale parameter limits the amount the user can zoom. This is problematic for people with low vision who rely on screen magnifiers to properly see the contents of a web page. Users with partial vision and low vision often choose to enlarge the fonts on their browser to make text on the web easier to read. The browser's viewport focus is everything visible in the browser window at a given moment. Maximizing the browser to full size on a high-resolution monitor creates a large the viewport focus area and may include the entire web page. If the browser window is small, the viewport focus area only includes a small part of the web page. The browser's viewport focus does not affect the programmatic focus. Users can scroll up and down the web page, but the programmatic focus does not follow the viewport. The Web Content Accessibility Guidelines calls for developers to design pages so that they support resize up to 200%. Ensures that the user-scalable="no" parameter is not present in the <meta name="viewport"> element and the maximum-scale parameter is not less than 2.
Impact: critical
Tags: cat.sensory-and-visual-cues, wcag2aa, wcag144
---
Violation ID: region
Description: Ensures all page content is contained by landmarks
Help: All page content must be contained by landmarks
Help URL: https://dequeuniversity.com/rules/axe/3.1/region?application=axeAPI
Why it matters: Navigating a web page is far simpler for screen reader users if the content splits between multiple high-level sections. Content outside of sections is difficult to find, and the content's purpose may be unclear. Historically, HTML lacked some key semantic markers such as the ability to designate sections of the page as the header, navigation, main content, and footer. Using both HTML5 elements and ARIA landmarks in the same element is considered a best practice, but the future favors using native HTML5 element regions as browser support increases.
Impact: moderate
Tags: cat.keyboard, best-practice
---
